const fetch = require('node-fetch');

// Teste das corre√ß√µes implementadas
async function testarCorrecoes() {
  console.log('üß™ Iniciando testes das corre√ß√µes...\n');

  try {
    // Teste 1: Verificar se a API est√° funcionando
    console.log('1Ô∏è‚É£ Testando conectividade da API...');
    const response = await fetch('http://localhost:3000/api/messages');
    if (response.ok) {
      console.log('‚úÖ API est√° funcionando corretamente');
    } else {
      console.log('‚ùå Erro na API:', response.status);
    }

    // Teste 2: Verificar se o sistema de envio est√° funcionando
    console.log('\n2Ô∏è‚É£ Testando sistema de envio...');
    const testMessage = {
      to: '1234567890@c.us', // N√∫mero de teste
      message: 'Teste de corre√ß√£o - ' + new Date().toISOString()
    };

    const sendResponse = await fetch('http://localhost:3000/api/send', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(testMessage)
    });

    if (sendResponse.ok) {
      console.log('‚úÖ Sistema de envio est√° funcionando');
    } else {
      console.log('‚ùå Erro no sistema de envio:', await sendResponse.text());
    }

    // Teste 3: Verificar sistema de resposta
    console.log('\n3Ô∏è‚É£ Testando sistema de resposta...');
    const replyMessage = {
      to: '1234567890@c.us',
      message: 'Esta √© uma resposta de teste',
      replyTo: {
        timestamp: Date.now() - 60000, // 1 minuto atr√°s
        body: 'Mensagem original para responder',
        from: '1234567890@c.us',
        senderName: 'Teste'
      }
    };

    const replyResponse = await fetch('http://localhost:3000/api/send', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(replyMessage)
    });

    if (replyResponse.ok) {
      console.log('‚úÖ Sistema de resposta est√° funcionando');
    } else {
      console.log('‚ùå Erro no sistema de resposta:', await replyResponse.text());
    }

    console.log('\nüéâ Testes conclu√≠dos!');
    console.log('\nüìã Resumo das corre√ß√µes implementadas:');
    console.log('‚Ä¢ ‚úÖ Preven√ß√£o de duplica√ß√£o de mensagens');
    console.log('‚Ä¢ ‚úÖ Melhoria no sistema de respostas do WhatsApp');
    console.log('‚Ä¢ ‚úÖ Sincroniza√ß√£o otimizada entre frontend e backend');
    console.log('‚Ä¢ ‚úÖ Verifica√ß√£o de mensagens j√° processadas');
    console.log('‚Ä¢ ‚úÖ Renderiza√ß√£o inteligente de novas mensagens');

  } catch (error) {
    console.error('‚ùå Erro durante os testes:', error.message);
  }
}

// Executar testes
testarCorrecoes(); 